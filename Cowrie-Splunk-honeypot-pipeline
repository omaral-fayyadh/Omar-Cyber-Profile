🛡️ Cowrie Honeypot → Splunk SIEM Pipeline
A Real-World Security Telemetry Project

By Omar Alfayyadh | Cybersecurity Engineer | Cloud SIEM | Threat Detection

🎯 Project Overview

This project demonstrates a complete end-to-end threat-detection pipeline, combining the Cowrie honeypot, Splunk Universal Forwarder, and Splunk Enterprise.
It collects, analyzes, and visualizes live cyberattacks against a simulated SSH/Telnet environment hosted on Azure.

🧠 Objective: Build a hands-on SOC simulation that showcases real-world telemetry engineering, log analysis, and SIEM alerting.

🧩 Architecture
[Attackers / Internet]
        │
        ▼
Cowrie Honeypot (Docker, TCP/2222–2223)
        │
        ▼
Splunk Universal Forwarder (port 9997)
        │
        ▼
Splunk Indexer / Search Head
  └─ Dashboards
  └─ Alerts
  └─ Geo Map & Analytics

⚙️ Core Components

Component	Purpose
Cowrie	SSH/Telnet honeypot for capturing brute-force and command-injection attempts
Splunk UF	Forwards Cowrie JSON logs to Splunk indexer
Splunk Enterprise	Hosts dashboards, alerts, and data analytics
GeoIP / iplocation	Resolves attacker IPs to countries
Crontab Health Check	Ensures Splunk forwarder uptime and log ingestion

📊 Dashboard Highlights

🧱 KPIs: Total Login Attempts, Unique Attacker IPs, Commands Executed

📈 Trends: Failed vs Successful Logins over time

📊 Top Attackers: Bar chart of highest-volume IPs

🗺️ Geo Map: Real-time distribution of attacking countries

💬 Command Summary: Common payloads (e.g., wget, curl, chmod +x)


🚨 Alerts Implemented

Alert	                      Description	                           Severity
Brute-Force Burst	    ≥20 failed logins per IP in 5 min	         🔴 High
Password Spray	            ≥10 distinct usernames per IP	         🟠 Medium
Successful Login	    Any success event	                         🔴 Critical
Suspicious Commands	    Regex match: wget, curl, base64, nc	         🔴 High
New Attacker IP	            First-time source detected	                 🟡 Info
UF Health Down	            No forwarder heartbeat in 10 min	         🔴 High


📍 Key Findings

Attacks began within minutes of exposure.

3 000 failed logins per day targeting root/admin/pi/ubnt.

Originating countries: RU, DE, IN, US.

Command payloads revealed downloader + privilege escalation patterns.

Peak hours: 00:00–08:00 UTC, matching global botnet schedules.

🧭 Executive Summary

This project represents a fully functional SOC pipeline — from attack surface exposure to SIEM visualization and automated alerting.

Key Outcomes

Real-world attacker telemetry captured and correlated in Splunk

Scalable log ingestion via forwarder architecture

Custom dashboards & KPI panels for SOC metrics

Actionable alerts simulating Tier 1–2 analyst workflows

Documented configs and automation for reproducibility

Technical Competencies Demonstrated

✅ Splunk Engineering & Dashboard Studio
✅ Linux & Docker administration
✅ Log normalization (props/inputs.conf)
✅ Regex-based detection logic
✅ Alerting and health monitoring
✅ Cloud deployment (Azure)

This project demonstrates the full lifecycle of modern threat detection engineering — suitable for portfolio inclusion or technical interviews.

☁️ Next Steps / Expansion Ideas

Migrate ingestion to Microsoft Sentinel (KQL rules)

Add SOAR automation for Slack/email notifications

Use Suricata / Zeek for network-level enrichment

Integrate Threat Intel feeds for IOC correlation

📂 Included Files

File	                                                        Description
dashboards/cowrie_dashboard.json	                        Splunk dashboard export
configs/inputs.conf             	                        Splunk forwarder input config
configs/props.conf                                      	JSON parsing and sourcetype
configs/outputs.conf	                                        Target indexer
docs/Cowrie_Splunk_Honeypot_Report_Omar_Alfayyadh.pdf	        Full write-up
scripts/splunk_health_check.cron	                        Cron health job
